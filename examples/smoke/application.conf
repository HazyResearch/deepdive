deepdive {

  db.default: {
    driver   : "org.postgresql.Driver"
    url      : "jdbc:postgresql://"${PGHOST}":"${PGPORT}"/"${DBNAME} #"
    user     : ${PGUSER}
    password : ${PGPASSWORD}
  }

  schema.variables {
    people1.has_cancer : Boolean
    people2.smokes     : Boolean
  }

  extraction.extractors: {
    # No extractors needed for this example
  }

  inference.factors: {
    # Smokes(x) => Cancer(x)
    people {
      input_query: """
        SELECT people1.id AS "people1.id", people2.id AS "people2.id",
               people2.smokes AS "people2.smokes",
               people1.has_cancer AS "people1.has_cancer"
          FROM people1, people2
         WHERE people1.person_id = people2.person_id
        """
      function : "Imply(people2.smokes, people1.has_cancer)"
      weight   : "?"
    }

    # Friends(x, y) => (Smokes(x) <=> Smokes(y))
    friends {
      input_query: """
        SELECT p1.id AS "people2.p1.id",
               p2.id AS "people2.p2.id",
               p1.smokes AS "people2.p1.smokes",
               p2.smokes AS "people2.p2.smokes",
               friends.person_id AS "friends.person_id"
          FROM friends
         INNER JOIN people2 AS p1
            ON (friends.person_id = p1.person_id)
         INNER JOIN people2 AS p2
            ON (friends.friend_id = p2.person_id)
        """
      friends.function : "Imply(people2.p1.smokes, people2.p2.smokes)"
      friends.weight   : 0.4
    }
  }

  calibration.holdout_fraction: 0.0
  sampler.java_args = "-Xmx8g"
  sampler.sampler_args: "-l 100 -s 10 -i 1000 -t 1 --alpha 0.01"
  # sampler.sampler_cmd: "util/sampler-dw-linux gibbs"
  # sampler.sampler_args: "-l 100 -s 1 -i 100 --alpha 0.01"

  # inference.skip_learning: true
  inference.skip_learning: false
}
